start_date = 2020,
end_date = 2020,
commod_codes = c("0301","0302","0303","0304","0305")
) %>%
ct_use_pretty_cols() %>%
group_by(`Partner Country`) %>%
summarise("Total" = sum(`Trade Value usd`)) %>%
filter(`Partner Country` != "World",
Total > 1000000)
export_peixe$prop = 100*export_peixe$Total/sum(export_peixe$Total)
export_peixe = expandRows(export_peixe, "prop")
export_peixe[sample(nrow(export_peixe), 3), ]
export_peixe[sample(nrow(export_peixe), 100- nrow(export_peixe)), ]
export_peixe <- ct_search(reporters = "Brazil",
partners = "All",
trade_direction = "exports",
start_date = 2020,
end_date = 2020,
commod_codes = c("0301","0302","0303","0304","0305")
) %>%
ct_use_pretty_cols() %>%
group_by(`Partner Country`) %>%
summarise("Total" = sum(`Trade Value usd`)) %>%
filter(`Partner Country` != "World",
Total > 1000000)
export_peixe$prop = 100*export_peixe$Total/sum(export_peixe$Total)
export_peixe = expandRows(export_peixe, "prop")
export_peixe <- rbind(export_peixe,
export_peixe[sample(nrow(export_peixe), 100- nrow(export_peixe)), ])
var = export_peixe$`Partner Country`
categ_table <- round(table(var) * ((nrows*nrows)/(length(var))))
df <- expand.grid(y = 1:nrows, x = 1:nrows)
df$category <- factor(rep(names(categ_table), categ_table))
ggplot(df, aes(x = x, y = y, fill = category)) +
geom_tile(color = "black", size = 0.5) +
scale_fill_brewer(palette = "Set3")
cols <- inlmisc::GetTolColors(n = 10)
if (system.file(package = "inlmisc", lib.loc = .libPaths()) == "")
utils::install.packages("inlmisc", dependencies = TRUE)
cols <- inlmisc::GetTolColors(n = 10)
cols
cols <- inlmisc::GetColors(n = 10)
cols
ggplot(df, aes(x = x, y = y, fill = category)) +
geom_tile(color = "black", size = 0.5) +
scale_fill_manual(inlmisc::GetColors(n = 10))
cols
col[1]
cols[1]
cols[[1]
]
cols[[1]]
cols[[12]]
ggplot(df, aes(x = x, y = y, fill = category)) +
geom_tile(color = "black", size = 0.5) +
scale_fill_manual(values = inlmisc::GetColors(n = 10))
ggplot(df, aes(x = x, y = y, fill = category)) +
geom_tile(color = "black", size = 0.5) +
scale_fill_manual(values = inlmisc::GetColors(n = 10)) +
theme_minimal()
?GetColors
ggplot(df, aes(x = x, y = y, fill = category)) +
geom_tile(color = "black", size = 0.5) +
scale_fill_manual(values = GetColors(n = 10, scheme = "light")) +
theme_minimal()
library(inlmisc)
ggplot(df, aes(x = x, y = y, fill = category)) +
geom_tile(color = "black", size = 0.5) +
scale_fill_manual(values = GetColors(n = 10, scheme = "light")) +
theme_minimal()
ggplot(df, aes(x = x, y = y, fill = category)) +
geom_tile(color = "black", size = 0.5) +
scale_fill_manual(values = GetColors(n = 10, scheme = "ground cover")) +
theme_minimal()
export_peixe <- ct_search(reporters = "Brazil",
partners = "All",
trade_direction = "exports",
start_date = 2020,
end_date = 2020,
commod_codes = c("0301","0302","0303","0304","0305")
) %>%
ct_use_pretty_cols() %>%
group_by(`Partner Country`) %>%
summarise("Total" = sum(`Trade Value usd`)) %>%
filter(`Partner Country` != "World",
Total > 500000)
export_peixe$prop = 100*export_peixe$Total/sum(export_peixe$Total)
export_peixe = expandRows(export_peixe, "prop")
export_peixe <- rbind(export_peixe,
export_peixe[sample(nrow(export_peixe), 100- nrow(export_peixe)), ])
var = export_peixe$`Partner Country`
categ_table <- round(table(var) * ((nrows*nrows)/(length(var))))
df <- expand.grid(y = 1:nrows, x = 1:nrows)
df$category <- factor(rep(names(categ_table), categ_table))
ggplot(df, aes(x = x, y = y, fill = category)) +
geom_tile(color = "black", size = 0.5) +
scale_fill_manual(values = GetColors(n = 10, scheme = "ground cover")) +
theme_minimal()
export_peixe <- ct_search(reporters = "Brazil",
partners = "All",
trade_direction = "exports",
start_date = 2020,
end_date = 2020,
commod_codes = c("0301","0302","0303","0304","0305")
) %>%
ct_use_pretty_cols() %>%
group_by(`Partner Country`) %>%
summarise("Total" = sum(`Trade Value usd`)) %>%
filter(`Partner Country` != "World",
Total > 1000000)
export_peixe$prop = 100*export_peixe$Total/sum(export_peixe$Total)
export_peixe = expandRows(export_peixe, "prop")
export_peixe <- rbind(export_peixe,
export_peixe[sample(nrow(export_peixe), 100- nrow(export_peixe)), ])
var = export_peixe$`Partner Country`
categ_table <- round(table(var) * ((nrows*nrows)/(length(var))))
df <- expand.grid(y = 1:nrows, x = 1:nrows)
df$category <- factor(rep(names(categ_table), categ_table))
ggplot(df, aes(x = x, y = y, fill = category)) +
geom_tile(color = "black", size = 0.5) +
scale_fill_manual(values = GetColors(n = 10, scheme = "ground cover")) +
theme_minimal()
export_peixe <- ct_search(reporters = "Brazil",
partners = "All",
trade_direction = "exports",
start_date = 2020,
end_date = 2020,
commod_codes = c("0301","0302","0303","0304","0305")
) %>%
ct_use_pretty_cols() %>%
group_by(`Partner Country`) %>%
summarise("Total" = sum(`Trade Value usd`)) %>%
filter(`Partner Country` != "World",
Total > 5000000)
export_peixe$prop = 100*export_peixe$Total/sum(export_peixe$Total)
export_peixe = expandRows(export_peixe, "prop")
export_peixe <- rbind(export_peixe,
export_peixe[sample(nrow(export_peixe), 100- nrow(export_peixe)), ])
var = export_peixe$`Partner Country`
categ_table <- round(table(var) * ((nrows*nrows)/(length(var))))
df <- expand.grid(y = 1:nrows, x = 1:nrows)
df$category <- factor(rep(names(categ_table), categ_table))
ggplot(df, aes(x = x, y = y, fill = category)) +
geom_tile(color = "black", size = 0.5) +
scale_fill_manual(values = GetColors(n = 10, scheme = "ground cover")) +
theme_minimal()
export_peixe <- ct_search(reporters = "Brazil",
partners = "All",
trade_direction = "exports",
start_date = 2020,
end_date = 2020,
commod_codes = c("0301","0302","0303","0304","0305")
) %>%
ct_use_pretty_cols() %>%
group_by(`Partner Country`) %>%
summarise("Total" = sum(`Trade Value usd`)) %>%
filter(`Partner Country` != "World",
Total > 2000000)
export_peixe$prop = 100*export_peixe$Total/sum(export_peixe$Total)
export_peixe = expandRows(export_peixe, "prop")
export_peixe <- rbind(export_peixe,
export_peixe[sample(nrow(export_peixe), 100- nrow(export_peixe)), ])
var = export_peixe$`Partner Country`
categ_table <- round(table(var) * ((nrows*nrows)/(length(var))))
df <- expand.grid(y = 1:nrows, x = 1:nrows)
df$category <- factor(rep(names(categ_table), categ_table))
ggplot(df, aes(x = x, y = y, fill = category)) +
geom_tile(color = "black", size = 0.5) +
scale_fill_manual(values = GetColors(n = 10, scheme = "ground cover")) +
theme_minimal()
ggplot(df, aes(x = x, y = y, fill = category)) +
geom_tile(color = "black", size = 0.5) +
scale_fill_manual(values = GetColors(n = 10, scheme = "light")) +
theme_minimal()
ggplot(df, aes(x = x, y = y, fill = category)) +
geom_tile(color = "black", size = 0.5) +
scale_fill_manual(values = GetColors(n = 9, scheme = "light")) +
theme_minimal()
ggplot(df, aes(x = x, y = y, fill = category)) +
geom_tile(color = "black", size = 0.5) +
scale_fill_manual(values = inlmisc::GetColors(n = 9, scheme = "light")) +
theme_minimal()
ggplot(df, aes(x = x, y = y, fill = category)) +
geom_tile(color = "black", size = 0.5) +
scale_fill_manual(values = inlmisc::GetColors(n = 9)) +
theme_minimal()
ggplot(df, aes(x = x, y = y, fill = category)) +
geom_tile(color = "black", size = 0.5) +
scale_fill_manual(values = inlmisc::GetTolColors(n = 9, scheme = "light")) +
theme_minimal()
ggplot(df, aes(x = x, y = y, fill = category)) +
geom_tile(color = "black", size = 0.5) +
scale_fill_manual(values = inlmisc::GetColors(n = 9, scheme = "light")) +
theme_minimal()
inlmisc::GetColors(n = 9, scheme = "light"
)
inlmisc::GetColors(n = 9)
inlmisc::GetColors(n = 9, scheme = "light")
as.character(inlmisc::GetColors(n = 9, scheme = "light"))
ggplot(df, aes(x = x, y = y, fill = category)) +
geom_tile(color = "black", size = 0.5) +
scale_fill_manual(values = as.character(inlmisc::GetColors(n = 9, scheme = "light"))) +
theme_minimal()
ggplot(df, aes(x = x, y = y, fill = category)) +
geom_tile(color = "black", size = 0.5) +
scale_fill_manual(values = as.character(GetColors(n = 9, scheme = "iridescent"))) +
theme_minimal()
ggplot(df, aes(x = x, y = y, fill = category)) +
geom_tile(color = "black", size = 0.5) +
scale_fill_manual(values = as.character(GetColors(n = 9, scheme = "sunset"))) +
theme_minimal()
View(pred)
export_peixe <- ct_search(reporters = "Brazil",
partners = "All",
trade_direction = "exports",
start_date = 2020,
end_date = 2020,
commod_codes = c("0301","0302","0303","0304","0305")
) %>%
ct_use_pretty_cols() %>%
group_by(`Partner Country`) %>%
summarise("Total" = sum(`Trade Value usd`)) %>%
filter(`Partner Country` != "World")
export_peixe$prop = 100*export_peixe$Total/sum(export_peixe$Total)
export_peixe = expandRows(export_peixe, "prop")
export_peixe <- rbind(export_peixe,
export_peixe[sample(nrow(export_peixe), 100- nrow(export_peixe)), ])
var = export_peixe$`Partner Country`
categ_table <- round(table(var) * ((nrows*nrows)/(length(var))))
df <- expand.grid(y = 1:nrows, x = 1:nrows)
df$category <- factor(rep(names(categ_table), categ_table))
ggplot(df, aes(x = x, y = y, fill = category)) +
geom_tile(color = "black", size = 0.5) +
scale_fill_manual(values = as.character(GetColors(n = 9, scheme = "sunset"))) +
theme_minimal()
ggplot(df, aes(x = x, y = y, fill = category)) +
geom_tile(color = "black", size = 0.5) +
scale_fill_manual(values = as.character(GetColors(n = 9, scheme = "discrete rainbow"))) +
theme_minimal()
ggplot(df, aes(x = x, y = y, fill = category)) +
geom_tile(color = "black", size = 0.5) +
scale_fill_manual(values = as.character(GetColors(n = 9, scheme = "discrete rainbow"))) +
theme_void()
ggplot(df, aes(x = x, y = y, fill = category)) +
geom_tile(color = "black", size = 0.5) +
scale_fill_manual(values = as.character(GetColors(n = 9, scheme = "discrete rainbow"))) +
theme_void() +
labs(title = "Destino das exportações de Peixe pelo Brasil")
ggplot(df, aes(x = x, y = y, fill = category)) +
geom_tile(color = "black", size = 0.5) +
scale_fill_manual(values = as.character(GetColors(n = 9, scheme = "discrete rainbow"))) +
theme_void() +
labs(title = "Destino das exportações de Peixe pelo Brasil (2020)")
ggplot(df, aes(x = x, y = y, fill = category)) +
geom_tile(color = "black", size = 0.5) +
scale_fill_manual(values = as.character(GetColors(n = 9, scheme = "light"))) +
theme_void() +
labs(title = "Destino das exportações de Peixe pelo Brasil (2020)")
ggplot(df, aes(x = x, y = y, fill = category)) +
geom_tile(color = "black", size = 0.5) +
scale_fill_manual(values = as.character(GetColors(n = 9, scheme = "ground cover"))) +
theme_void() +
labs(title = "Destino das exportações de Peixe pelo Brasil (2020)")
ggplot(df, aes(x = x, y = y, fill = category)) +
geom_tile(color = "black", size = 0.5) +
scale_fill_manual(values = as.character(GetColors(n = 9, scheme = "roma"))) +
theme_void() +
labs(title = "Destino das exportações de Peixe pelo Brasil (2020)")
ggplot(df, aes(x = x, y = y, fill = category)) +
geom_tile(color = "black", size = 0.1) +
scale_fill_manual(values = as.character(GetColors(n = 9, scheme = "roma"))) +
theme_void() +
labs(title = "Destino das exportações de Peixe pelo Brasil (2020)")
ggplot(df, aes(x = x, y = y, fill = category)) +
geom_tile(color = "black", size = 0) +
scale_fill_manual(values = as.character(GetColors(n = 9, scheme = "roma"))) +
theme_void() +
labs(title = "Destino das exportações de Peixe pelo Brasil (2020)")
ggplot(df, aes(x = x, y = y, fill = category)) +
geom_tile(color = "black", size = 0.1) +
scale_fill_manual(values = as.character(GetColors(n = 9, scheme = "roma"))) +
theme_void() +
labs(title = "Destino das exportações de Peixe pelo Brasil (2020)")
ggplot(df, aes(x = x, y = y, fill = category)) +
geom_tile(color = "black", size = 0.1) +
scale_fill_manual(values = as.character(GetColors(n = 9,
scheme = "roma",
alpha = 0.3))) +
theme_void() +
labs(title = "Destino das exportações de Peixe pelo Brasil (2020)")
ggplot(df, aes(x = x, y = y, fill = category)) +
geom_tile(color = "black", size = 0.1) +
scale_fill_manual(values = as.character(GetColors(n = 9,
scheme = "roma",
alpha = 0.7))) +
theme_void() +
labs(title = "Destino das exportações de Peixe pelo Brasil (2020)")
ggplot(df, aes(x = x, y = y, fill = category)) +
geom_tile(color = "black", size = 0.1) +
scale_fill_manual(values = as.character(GetColors(n = 9,
scheme = "roma",
alpha = 0.9))) +
theme_void() +
labs(title = "Destino das exportações de Peixe pelo Brasil (2020)")
ggplot(df, aes(x = x, y = y, fill = category)) +
geom_tile(color = "black", size = 0.1) +
scale_fill_manual(values = as.character(GetColors(n = 9,
scheme = "roma",
alpha = 0.9))) +
theme_void() +
labs(title = "Destino das exportações de Peixe pelo Brasil (2020)") +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0), trans = 'reverse')
ggplot(df, aes(x = x, y = y, fill = category)) +
geom_tile(color = "black", size = 0.5) +
scale_fill_manual(values = as.character(GetColors(n = 9,
scheme = "roma",
alpha = 0.9))) +
theme_void() +
labs(title = "Destino das exportações de Peixe pelo Brasil (2020)") +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0), trans = 'reverse')
knitr::opts_chunk$set(echo = TRUE)
plot.title = element_text(size = rel(1.2))
ggplot(df, aes(x = x, y = y, fill = category)) +
geom_tile(color = "black", size = 0.5) +
scale_fill_manual(values = as.character(GetColors(n = 9,
scheme = "roma",
alpha = 0.9))) +
theme_void() +
labs(title = "Destino das exportações de Peixe pelo Brasil (2020)") +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0), trans = 'reverse') +
theme(panel.border = element_rect(size = 2),
plot.title = element_text(size = rel(1.2))
)
ggplot(df, aes(x = x, y = y, fill = category)) +
geom_tile(color = "black", size = 0.5) +
scale_fill_manual(values = as.character(GetColors(n = 9,
scheme = "roma",
alpha = 0.9))) +
theme_void() +
labs(title = "Destino das exportações de Peixe pelo Brasil (2020)") +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0), trans = 'reverse') +
theme(panel.border = element_rect(size = 2),
plot.title = element_text(size = rel(1.2)))
ggplot(df, aes(x = x, y = y, fill = category)) +
geom_tile(color = "black", size = 0.5) +
scale_fill_manual(values = as.character(GetColors(n = 9,
scheme = "roma",
alpha = 0.9))) +
theme_void() +
labs(title = "Destino das exportações de Peixe pelo Brasil (2020)") +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0), trans = 'reverse') +
theme(panel.border = element_rect(size = 2))
ggplot(df, aes(x = x, y = y, fill = category)) +
geom_tile(color = "black", size = 0.5) +
scale_fill_manual(values = as.character(GetColors(n = 9,
scheme = "roma",
alpha = 0.9))) +
theme_void() +
labs(title = "Destino das exportações de Peixe pelo Brasil (2020)") +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0), trans = 'reverse')
ggplot(df, aes(x = x, y = y, fill = category)) +
geom_tile(color = "black", size = 0.5) +
scale_fill_manual(values = as.character(GetColors(n = 9,
scheme = "roma",
alpha = 0.9))) +
theme_void() +
labs(title = "Destino das exportações de Peixe pelo Brasil (2020)") +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0), trans = 'reverse') +
theme(panel.border = element_rect(size = 2))
ggplot(df, aes(x = x, y = y, fill = category)) +
geom_tile(color = "black", size = 0.5) +
scale_fill_manual(values = as.character(GetColors(n = 9,
scheme = "roma",
alpha = 0.9))) +
theme_void() +
labs(title = "Destino das exportações de Peixe pelo Brasil (2020)") +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0), trans = 'reverse') +
theme(panel.border = element_rect(size = 2, fill = NA))
export_peixe <- ct_search(reporters = "Brazil",
partners = "All",
trade_direction = "exports",
start_date = 2020,
end_date = 2020,
commod_codes = c("0301","0302","0303","0304","0305")
) %>%
ct_use_pretty_cols() %>%
group_by(`Partner Country`) %>%
summarise("Total" = sum(`Trade Value usd`)) %>%
filter(`Partner Country` != "World")
kable(export_peixe)
comtradr::ct_get_remaining_hourly_queries()
library(kableExtra)
export_peixe <- ct_search(reporters = "Brazil",
partners = "All",
trade_direction = "exports",
start_date = 2020,
end_date = 2020,
commod_codes = c("0301","0302","0303","0304","0305")
) %>%
ct_use_pretty_cols() %>%
group_by(`Partner Country`) %>%
summarise("Total" = sum(`Trade Value usd`)) %>%
filter(`Partner Country` != "World")
kable(export_peixe)
braziltop <- ct_search(reporters = "Brazil",
partners = c("USA", "China", "Argentina", "Netherlands"),
trade_direction = "exports") %>%
ct_use_pretty_cols()
ggplot(braziltop, aes(Year, `Trade Value usd`, color = factor(`Partner Country`))) +
geom_point(size = 2) +
geom_line(size = 1) +
scale_color_manual(values = c("#011627", "#FF3366", "#2EC4B6", "#20A4F3"),
name = "País") +
scale_shape_discrete(name = "País") +
labs(title = "Destino das exportações brasileiras",
y = "Total em dólares",
x = "Ano") +
theme_minimal()
export_peixe <- ct_search(reporters = "Brazil",
partners = "All",
trade_direction = "exports",
start_date = 2020,
end_date = 2020,
commod_codes = c("0301","0302","0303","0304","0305")
) %>%
ct_use_pretty_cols() %>%
group_by(`Partner Country`) %>%
summarise("Total" = sum(`Trade Value usd`)) %>%
filter(`Partner Country` != "World")
export_peixe$prop = 100*export_peixe$Total/sum(export_peixe$Total)
export_peixe = expandRows(export_peixe, "prop")
export_peixe <- rbind(export_peixe,
export_peixe[sample(nrow(export_peixe), 100- nrow(export_peixe)), ])
var = export_peixe$`Partner Country`
nrows <- 10
categ_table <- round(table(var) * ((nrows*nrows)/(length(var))))
base <- expand.grid(y = 1:nrows, x = 1:nrows)
base$category <- factor(rep(names(categ_table), categ_table))
ggplot(base, aes(x = x, y = y, fill = category)) +
geom_tile(color = "black", size = 0.5) +
scale_fill_manual(values = as.character(GetColors(n = 9,
scheme = "roma",
alpha = 0.9))) +
theme_void() +
labs(title = "Destino das exportações de Peixe pelo Brasil (2020)") +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0), trans = 'reverse') +
theme(panel.border = element_rect(size = 2, fill = NA))
library(tidyverse)
t = seq(1,100,1)
x = t*0.1 + 100 + rnorm(100, 0,1) + cos(t)
y = x + rnorm(100,0,1)
z = 10 + rnorm(100, 0,0.1)
plot(z, type = "l")
setwd("~/Trabalho-acadêmico/GitHub/alvaras_curitiba/alvaras-curitiba")
library(shiny); runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
bairros = geobr::read_neighborhood()
bairros = subset(bairros, bairros$name_muni == "Curitiba")
alv <- read.csv2("base_alvara.CSV")
alv$ATIVIDADE_PRINCIPAL = as.factor(alv$ATIVIDADE_PRINCIPAL)
alv = alv %>%
group_by(ATIVIDADE_PRINCIPAL) %>%
mutate(count = n())
alv = subset(alv, alv$count > 100)
cep = read.table("cep_curitiba.txt", header = TRUE, sep = " ", dec = ".")
cep$CEP = cep$cep
cep$cep = NULL
bairros = geobr::read_neighborhood()
bairros = subset(bairros, bairros$name_muni == "Curitiba")
alv = merge(alv, cep, by = "CEP", all.x = TRUE)
mun_cwb <- read_municipality(code_muni=4106902, year=2017)
no_axis <- theme(axis.title=element_blank(),
axis.ticks=element_blank())
runApp('app2.R')
runApp('app2.R')
alv
alv <- read_csv2("base_alvara.CSV")
alv
View(alv)
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
list(licenses_sf, licenses_sf)
licenses = alv[alv$ATIVIDADE_PRINCIPAL==input$Setor,]
licenses = licenses[!is.na(licenses$long),]
licenses_sf <- st_as_sf(licenses, coords = c("long", "lat"), crs =4674)
licenses_coord  <- licenses_sf %>%
cbind(., st_coordinates(licenses_sf))
licenses = licenses[!is.na(licenses$long),]
licenses_sf <- st_as_sf(licenses, coords = c("long", "lat"), crs =4674)
licenses_coord  <- licenses_sf %>%
cbind(., st_coordinates(licenses_sf))
a <- list(dados, dados_g)
dados
a[[1]]
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
View(alv)
